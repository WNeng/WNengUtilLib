## Project-wide Gradle settings.
#
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html
#
# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
# Default value: -Xmx1024m -XX:MaxPermSize=256m
# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
#
# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
# org.gradle.parallel=true
#Sun Sep 18 11:56:17 CST 2016

android.useDeprecatedNdk=true

#为gradle守护进程配置jvmargs，可以用于调整gradle构建项目时的可用内存大小 等，这里我们设置了java堆大小为2G
#当你在build的时候 IDE报了类似的错误
#...aapt.exe'' finished with non-zero exit value 1
#你也可以使用这个参数去调整java堆大小，去避免这个错误。
org.gradle.jvmargs=-Xmx2048m

#让Gradle以并行模式去执行task (当你稍微了解Gradle之后，你就会知道Gradle脚本是由任务(task)组成的。而我们使用Gradle去构建项目的时候呢，就相当于要求Gradle去执行若干个构建任务)
org.gradle.parallel=true

#激活新的incubating mode。让Gradle在build大型多项目的时候更快！
org.gradle.configureondemand=true

#当设置了它的时候，你的gradle将会以进程守护的方式运行（简而言之就是一直在后台运行着），这就意味着，gradle进程的资源将会一直存在，随时待命你的build task！我们都知道，创建进程是一个很耗时的过程。
setting.org.gradle.daemon=true

#当你配置了这个参数的参数的时候，Gradle会以相应数目的线程去构建项目，当然速度会嗖嗖的！

